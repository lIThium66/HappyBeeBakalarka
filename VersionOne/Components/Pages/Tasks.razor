@page "/tasks"
@inject IJobServices JobService
@rendermode InteractiveServer
@* @inject NavigationManager NavigationManager *@
@attribute [StreamRendering]



<!DOCTYPE html>
<html lang="en">

<head>
    <title>Tasks</title>
</head>


<h2>Tasks</h2>
<h4> Be as productive as Bee <span class="beeimg"></span> </h4>
</html>


 <body>
    @*     <div class="addtask">
        <label> <strong> add your task: </strong> <input />
            <button class="btn btn-warning" type="button" @onclick="createtask"><strong>create task</strong></button>
        </label>
    </div> *@

  
</body>

@if (jobs == null) 
{
    <span>Loading...</span>
}
else if (jobs.Count == 0)
{
    <span>No tasks found.</span>
}
else
{
    <ul>
        @foreach (var job in jobs)
        {
            <li>@job.Name <EditJobButton Id="job.Id"/></li>
        }
    </ul>
}

<CreateJobButton />


@code {
    List<Job>? jobs = null;

    protected override async Task OnInitializedAsync()
    {
        jobs = await JobService.GetAllJobs();
    }

    /*
    private void CreateTask()
    {
        NavigationManager.NavigateTo("/edit-tasks");
    }

    */
}