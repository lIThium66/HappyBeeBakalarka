@page "/manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using VersionOneWA.Components.Account
@using VersionOneWA.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<h3>Profile</h3>
<StatusMessage />

<div class="row">
    <div class="col-md-6">
        <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <input type="text" value="@email" class="form-control" placeholder="Please choose your email." disabled />
                <label for="email" class="form-label">Email</label>
            </div>
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <input type="text" value="@Input.Name" class="form-control" placeholder="Please enter your name" disabled/>
                <label for="name" class="form-label">Name</label>
            </div>
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <input type="text" value="@Input.Surname" class="form-control" placeholder="Please enter your surname" disabled/>
                <label for="surname" class="form-label">Surname</label>
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number." />
                <label for="phone-number" class="form-label">Phone number</label>
                <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputDate id="date-of-birth" @bind-Value="Input.DateOfBirth" class="form-control"/>
                <label for="date-of-birth" class="form-label">Date of Birth</label>
                <ValidationMessage For="() => Input.DateOfBirth" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </EditForm>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? email;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Input ??= new();

        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        email = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
        Input.DateOfBirth ??= user.DateOfBirth;
        Input.Name ??= user.Name;
        Input.Surname ??= user.Surname;
    }

    private async Task OnValidSubmitAsync()
    {
        user.PhoneNumber = Input.PhoneNumber;
        user.DateOfBirth = Input.DateOfBirth;
        user.Name = Input.Name;
        user.Surname = Input.Surname;

        var updateResult = await UserManager.UpdateAsync(user);
        if (!updateResult.Succeeded)
        {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to upadate the user.", HttpContext);
        }
        

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
        public DateOnly? DateOfBirth { get; set; }
        public string Name { get; set; }
        public string Surname { get; set; }
        
        

    }
}
