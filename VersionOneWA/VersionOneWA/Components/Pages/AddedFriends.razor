@page "/friends"
@inject IFriendshipService FriendshipService
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using VersionOneWA.Shared.Classes
@using Microsoft.AspNetCore.Identity

<h1>Your Friends</h1>

@if (friends == null)
{
    <p>Loading your friends...</p>
}
else if (!friends.Any() || friends.All(f => f == null)) // Ak sú všetky null
{
    <p>You don't have any friends yet.</p>
}
else
{
    <div class="friend-list">
        @foreach (var friend in friends.Where(f => f != null)) // Ignorujeme null hodnoty
        {
            <div class="friend-item card mb-3">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title mb-1">@friend?.Name @friend?.Surname</h5>
                        <p class="card-text text-muted mb-0">@friend?.Email</p>
                    </div>
                </div>
            </div>
        }
    </div>
}


@code {
    private List<ApplicationUser> friends = new();
    private ApplicationUser? currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        currentUser = await UserManager.GetUserAsync(authState.User);

        if (currentUser != null)
        {
            friends = await FriendshipService.GetFriendsAsync(currentUser.Id) ?? new List<ApplicationUser>();
        }
        else
        {
            friends = new List<ApplicationUser>(); // Predídeme null referencii
        }
    }

}
